// main: ../main.scss

/*
* STYLING BUTTONS.
* Since we are in partials scss, we can get specific and add fonts, colors, etc.
*/

%btn {
    display: block;
    padding: $spacing $spacing*1.5;
    color: var(--couleurNoir);
    font-weight: 400;
    text-align: center;
    font-size: 1em;
    line-height: 1.2;
    transition: all .15s ease-in-out;
    cursor: pointer;
    position: relative;
    width: 100%;
    border-color: var(--couleurNoir);
    border-width: 2px;
    border-style: solid;
    text-decoration: none;
    border-radius: 4px;
    @include media-breakpoint-up(md){
        width: auto;
    }

    p &{

        @include media-breakpoint-up(md){
            display: inline-block;
        }
    }

    @include media-breakpoint-up(md) {
        @include hover-focus-active{
            color: var(--couleurBlanc);
            background-color: var(--couleurNoir);
        }
    }
}

.navbar-extra,
.content-wrapper{
    button:not(.select2-selection__clear):not(.slick-arrow),.button{
        @extend %btn;
    }
}

.btn__wrapper{

    .btn{
        display: inline-block;
    }
}

@include media-breakpoint-up(md) {
    .btn__left { margin-right: auto; }
    .btn__center { margin-left: auto; margin-right: auto; }
    .btn__right { margin-left: auto; }
}

.gform_button{
    background-color: transparent;
    @extend %btn;
}

$btn_styles:
"white" var(--couleurBlanc) var(--couleurNoir),
"blue" var(--couleurNoir) var(--couleurNoir),
"black" var(--couleurNoir) var(--couleurBlanc),
"yellow" var(--couleurNoir) var(--couleurRouge),
"red" var(--couleurRouge) var(--couleurNoir);

@each $btn-name, $color, $color-alt in $btn_styles {

    %btn__#{$btn-name} {
        color: $color-alt;
        background-color: $color;

        @if $btn-name == "white" {
            border-color: $color-alt;

            svg{
                fill:$color;

                path,
                #fill{
                    fill:$color;
                }
            }
        } @else {
            border-color: $color;

            svg{
                fill:$color-alt;

                path,
                #fill{
                    fill:$color-alt;
                }
            }
        }


        @include hover-focus-active{
            color: $color;
            background-color: $color-alt;

            @if $btn-name == "black" or  $btn-name == "white" {
                border-color: $color;

                svg{
                    path,
                    #fill{
                        fill:$color;
                    }
                }
            } @else {
                border-color: $color-alt;

                svg{
                    path,
                    #fill{
                        fill:$color;
                    }
                }
            }

        }
    }

    .navbar-extra .btn--#{$btn-name},
    .content-wrapper .btn--#{$btn-name}{
        @extend %btn__#{$btn-name};
    }
}

.button-wrap{
	text-align: center;
    //margin-top: 75px;
    width: 100%;
}

.button-wrap, .rte{
    .button {
        @include media-breakpoint-up(md){
            display: inline-block;
        }
    }
}

.readmore{
    color: var(--couleurNoir);
	@include hover-transition;
    display: flex;
    flex-flow: row wrap;
    align-items: center;
    height: 30px;

    svg{
        max-height: 1em;
        margin: auto 0 auto $spacing*.75;
    }
    
    @include hover-focus-active{
        circle {
            fill: var(--couleurNoir);
        }
        path {
            fill: var(--couleurBlanc);
        }
    }
}