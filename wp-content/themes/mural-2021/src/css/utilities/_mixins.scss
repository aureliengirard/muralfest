// main: ../main.scss


@mixin hover() {
  &:hover { @content; }
}

@mixin hover-focus() {
  &:hover,
  &:focus {
    @content;
  }
}

@mixin hover-focus-active() {
  &:hover,
  &:focus,
  &:active {
    @content;
  }
}

@mixin all-elems {
    p, ul, ol, dl, blockquote, table, pre, form, div, h1, h2, h3, h4, h5, h6 {
        @content;
    }
}

@mixin all-headings-elems {
    h1, h2, h3, h4, h5, h6 {
        @content;
    }
}

@mixin all-txt-elems {
    p, ul, ol, dl, blockquote, table {
        @content;
    }
}

@mixin content-wrapper {
    .content-wrapper{
        @content;
    }
}

// =============================================================================
// Managing placeholders
// =============================================================================

@mixin placeholders ($color, $font-family, $text-transform, $font-weight, $font-size) {
    &::-webkit-input-placeholder { /* Chrome */
        color: $color !important;
        font-weight: $font-weight !important;
        font-size: $font-size !important;
        font-family: $font-family !important;
        text-transform: $text-transform !important;
    }
    &:-ms-input-placeholder { /* IE 10+ */
        color: $color !important;
        font-weight: $font-weight !important;
        font-size: $font-size !important;
        font-family: $font-family !important;
        text-transform: $text-transform !important;
    }
    &::-moz-placeholder { /* Firefox 19+ */
        color: $color !important;
        font-weight: $font-weight !important;
        font-size: $font-size !important;
        font-family: $font-family !important;
        text-transform: $text-transform !important;
        opacity:1;
    }
    &:-moz-placeholder { /* Firefox 4 - 18 */
        color: $color !important;
        font-weight: $font-weight !important;
        font-size: $font-size !important;
        font-family: $font-family !important;
        text-transform: $text-transform !important;
        opacity:1;
    }
}

// =============================================================================
// Auto-color links
// If important == true, we add !important at the end, else, we don't.
// =============================================================================

@mixin linx ($link, $visit, $hover, $active, $important) {
    a:not(.btn) {
        @if $important {
            color: $link !important;
            text-decoration: none !important;

            &:visited {
                color: $visit !important;
            }

            &:hover {
                color: $hover !important;
                text-decoration: none;
            }

            &:active {
                color: $active !important;
            }
        } @else {
            color: $link;
            text-decoration: none;

            &:not(.btn):visited {
                color: $visit;
            }

            &:hover {
                color: $hover;
            }

            &:active {
                color: $active;
            }
        }
    }
}

// =============================================================================
// Small mixins useful for multi-browser support
// =============================================================================

@mixin before{
    content:" ";
    position:absolute;
    visibility:visible;
}

@mixin transition($transition){
    -webkit-transition:$transition;
    -moz-transition:$transition;
    -o-transition:$transition;
    transition:$transition;
}

@mixin calc($key, $value) {
    #{$key}: -webkit-calc(#{$value});
    #{$key}: -moz-calc(#{$value});
    #{$key}: calc(#{$value});
}

// Flexbox
@mixin flexbox {
    display: -ms-flexbox;
    display: flex;
}
// Flexbox
@mixin flexbox-important {
    display: -webkit-flex !important;
    display: flex !important;
}

@mixin inline-flex {
    display: -webkit-inline-flex;
    display: inline-flex;
}

// Flexwrap
@mixin flex-wrap($values) {
    -ms-flex-wrap: $values;
    flex-wrap:  $values;
}

// Flex
@mixin flex($values) {
    -webkit-flex:  $values;
    flex:  $values;
}

// Flex-flow
@mixin flex-flow($values){
    -webkit-flex-flow: $values; /* Safari 6.1+ */
    flex-flow: $values;
}

// Flex direction column
@mixin flex-direction($values) {
    -moz-flex-direction: $values;
    -ms-flex-direction: $values;
    flex-direction: $values;
}

// align-content
@mixin align-content($values){
    -webkit-align-content: $values;
    align-content: $values;
}

// align-content
@mixin justify-content($values){
    -webkit-justify-content: $values;
    justify-content: $values;
    -ms-justify-content: $values;
}

// align-item
@mixin align-items($values){
    -webkit-align-items: $values;
    align-items: $values;
    -webkit-align-content: $values;
    align-content: $values;
}

// justify-items
@mixin justify-items($values){
    -webkit-justify-items: $values;
    justify-items: $values;
}

// Order
@mixin order($val) {
    -ms-flex-order: $val;
    -webkit-order: $val;
    order: $val;
}

@mixin box-shadow($attributes){
    -webkit-box-shadow: $attributes;
    box-shadow: $attributes;
}

@mixin linear-gradient($from, $middle, $to) {
    background: -moz-linear-gradient(90deg, $from 50%, $middle 50%, $to 100%);
    background: -webkit-linear-gradient(90deg, $from 50%, $middle 50%, $to 100%);
    background: -o-linear-gradient(90deg, $from 50%, $middle 50%, $to 100%);
    background: linear-gradient(90deg, $from 50%, $middle 50%, $to 100%);
}
@mixin flex-width($width){
    max-width: $width;
    -webkit-flex: 0 0 $width;
    -ms-flex: 0 0 $width;
    flex: 0 0 $width;
}

@mixin filter($filter-type,$filter-amount) {
    -webkit-filter: $filter-type+unquote('(#{$filter-amount})');
    -moz-filter: $filter-type+unquote('(#{$filter-amount})');
    -ms-filter: $filter-type+unquote('(#{$filter-amount})');
    -o-filter: $filter-type+unquote('(#{$filter-amount})');
    filter: $filter-type+unquote('(#{$filter-amount})');
}

@mixin overlay($color, $opacity){
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    opacity: $opacity;
    background-color: $color;
    @include transition(opacity .25s ease-in-out);
}

/* Safari CSS hacks */
@mixin safari {
    @media screen and (-webkit-min-device-pixel-ratio:0) {
        @content;
    }
}

/* IE CSS hacks */
@mixin ie {
    @media all and (-ms-high-contrast: none), (-ms-high-contrast: active){
        @content;
    }
}
